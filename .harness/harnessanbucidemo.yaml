pipeline:
  name: harness-anbu-ci-demo
  identifier: harnessanbucidemo
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: gacerioni/harness-srm-demo
        build: <+input>
  stages:
    - stage:
        name: Java Build
        identifier: Java_Build
        type: CI
        spec:
          caching:
            enabled: true
            paths:
              - /root/.m2/repository
              - /harness/caching-intelligence
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - stepGroup:
                  name: IaC
                  identifier: IaC
                  steps:
                    - step:
                        type: GitClone
                        name: Clone TF
                        identifier: Clone_TF
                        spec:
                          connectorRef: account.Github
                          repoName: gacerioni/IaC-Terraform-Gabs
                          build:
                            type: branch
                            spec:
                              branch: simple-s3-creator
                    - step:
                        type: Plugin
                        name: Plugin Test Shared
                        identifier: Plugin_Test_Shared
                        spec:
                          connectorRef: account.harnessImage
                          image: gacerioni/fakedrone:1
                          imagePullPolicy: Always
                    - step:
                        type: Plugin
                        name: Create S3 Terraform
                        identifier: Create_S3_Terraform
                        spec:
                          connectorRef: account.harnessImage
                          image: jmccann/drone-terraform
                          settings:
                            plan: "false"
                            root_dir: gacerioni/IaC-Terraform-Gabs
                            vars:
                              region: sa-east-1
                              global_access_key: <+secrets.getValue('account.aws_tf_accesskey')>
                              global_secret_key: <+secrets.getValue('account.aws_tf_secretkey')>
                              bucket_prefix: cicert-gabs
                              acl: private
                        failureStrategies:
                          - onFailure:
                              errors:
                                - Timeout
                                - Unknown
                              action:
                                type: Retry
                                spec:
                                  retryCount: 3
                                  onRetryFailure:
                                    action:
                                      type: MarkAsFailure
                                  retryIntervals:
                                    - 5s
                  when:
                    stageStatus: Success
                    condition: 1 == 0
                  failureStrategies: []
                  spec: {}
              - stepGroup:
                  name: Caching Intelligence
                  identifier: Caching_Intelligence
                  steps:
                    - step:
                        type: Run
                        name: CIntelligence TEST BEFORE
                        identifier: check_dir
                        spec:
                          shell: Sh
                          command: |-
                            echo "PRINTING HOME STUFF FROM /harness"
                            pwd
                            echo ""
                            ls -ltr ./*
                            echo ""
                            tree

                            echo "PRINTING STUFF FROM MAVEN PROBABLE REPOS"
                            ls -ltr /root/.m2/repository/* || true
                            ls -ltr /.m2/repository/* || true
                    - step:
                        type: Run
                        name: caching-intelligence
                        identifier: cachingintelligence
                        spec:
                          shell: Sh
                          command: |-
                            mkdir caching-intelligence
                            cd caching-intelligence

                            echo gabs > gabs.txt
              - stepGroup:
                  name: Build with Cache
                  identifier: Build_with_Cache
                  steps:
                    - step:
                        type: RestoreCacheS3
                        name: Restore Maven Repo
                        identifier: Restore_Maven_Repo
                        spec:
                          connectorRef: AWS
                          region: us-east-1
                          bucket: gacerioni-bucket
                          key: mavenrepo
                          archiveFormat: Tar
                        when:
                          stageStatus: Success
                          condition: 1 == 0
                        failureStrategies: []
                    - step:
                        type: RunTests
                        name: Run and Build
                        identifier: Run_Tests
                        spec:
                          connectorRef: account.harnessImage
                          image: maven:3.8.6-openjdk-18
                          language: Java
                          buildTool: Maven
                          args: clean test
                          packages: com.gabsthecreator
                          runOnlySelectedTests: true
                          preCommand: |-
                            export version=`mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout -Dmaven.repo.local=/root/.m2/repository`
                            export release="$version"
                            export commitHash=<+codebase.commitSha>
                            export gitBranch=<+codebase.branch>
                          postCommand: |-
                            mvn package -DskipTests


                            echo "printing current dir"
                            pwd
                            ls -ltra
                            echo "Who am I at runtime"
                            whoami

                            ls -ltra /tmp/engine
                          reports:
                            type: JUnit
                            spec:
                              paths:
                                - "**/*.xml"
                          outputVariables:
                            - name: version
                            - name: release
                            - name: commitHash
                            - name: gitBranch
                        when:
                          stageStatus: Success
                          condition: 1 == 0
                        failureStrategies: []
                    - step:
                        type: Run
                        name: mvn version
                        identifier: mvn_version
                        spec:
                          shell: Sh
                          command: |-
                            mvn -version

                            echo ""

                            env | grep JAVA
                    - step:
                        type: RunTests
                        name: Test and Build
                        identifier: Tests_Build
                        spec:
                          language: Java
                          buildTool: Maven
                          args: clean test
                          packages: com.gabsthecreator
                          runOnlySelectedTests: true
                          preCommand: |-
                            export version="3.0.0"
                            export release="$version"
                            export commitHash=<+codebase.commitSha>
                            export gitBranch=<+codebase.branch>

                            export JAVA_HOME=/usr/lib/jvm/temurin-17-jdk-amd64
                          postCommand: |-
                            mvn package -DskipTests


                            echo "printing current dir"
                            pwd
                            ls -ltra
                            echo "Who am I at runtime"
                            whoami

                            ls -ltra /tmp/engine
                          reports:
                            type: JUnit
                            spec:
                              paths:
                                - "**/*.xml"
                          outputVariables:
                            - name: version
                            - name: release
                            - name: commitHash
                            - name: gitBranch
                        when:
                          stageStatus: Success
                        failureStrategies: []
                    - step:
                        type: Run
                        name: CIntelligence TEST AFTER BUILD
                        identifier: CIntelligence_TEST_AFTER_BUILD
                        spec:
                          shell: Sh
                          command: |-
                            echo "PRINTING HOME STUFF FROM /harness"
                            pwd
                            echo ""
                            ls -ltr ./*
                            echo ""
                            tree

                            echo "PRINTING STUFF FROM MAVEN PROBABLE REPOS"
                            ls -ltr /root/.m2/repository/*
                    - step:
                        type: SaveCacheS3
                        name: Save Maven Repo
                        identifier: Save_Maven_Repo
                        spec:
                          connectorRef: AWS
                          region: us-east-1
                          bucket: gacerioni-bucket
                          key: mavenrepo
                          sourcePaths:
                            - /root/.m2/repository
                            - /.m2/repository
                          archiveFormat: Tar
                        when:
                          stageStatus: Success
                          condition: 1 == 0
                        failureStrategies: []
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push an image to Docker Registry_1
                  identifier: BuildandPushanimagetoDockerRegistry_1
                  spec:
                    connectorRef: account.harnessImage
                    repo: <+pipeline.variables.DockerHub_User>/<+pipeline.variables.DockerHub_Repo>
                    tags:
                      - latest
                      - <+pipeline.variables.tag>
          sharedPaths:
            - /root/.m2/repository
            - /.m2/repository
        when:
          pipelineStatus: Success
    - stage:
        name: Integration Tests
        identifier: Integration_Tests
        type: CI
        spec:
          cloneCodebase: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Background
                  name: Start and expose the APP
                  identifier: myappservice
                  spec:
                    connectorRef: account.harnessImage
                    image: <+pipeline.variables.DockerHub_User>/<+pipeline.variables.DockerHub_Repo>:<+pipeline.variables.tag>
                    shell: Sh
                    portBindings:
                      "8080": "8080"
                    imagePullPolicy: IfNotPresent
              - step:
                  type: Run
                  name: sleep
                  identifier: sleep
                  spec:
                    shell: Sh
                    command: sleep 10
              - step:
                  type: Run
                  name: Test from HOST
                  identifier: Test_from_HOST
                  spec:
                    shell: Bash
                    command: |-
                      sleep 10  
                      curl localhost:8080
              - step:
                  type: Run
                  name: Test from Container
                  identifier: Test_from_Container
                  spec:
                    connectorRef: account.harnessImage
                    image: yauritux/busybox-curl
                    shell: Sh
                    command: curl -i http://myappservice:8080
  variables:
    - name: DockerHub_User
      type: String
      description: ""
      value: <+input>
    - name: DockerHub_Repo
      type: String
      description: ""
      value: harness-anbu-demo
    - name: tag
      type: String
      description: ""
      value: <+pipeline.stages.Java_Build.spec.execution.steps.Run_Tests.output.outputVariables.version>
