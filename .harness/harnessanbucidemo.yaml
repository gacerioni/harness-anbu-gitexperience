pipeline:
  name: harness-anbu-ci-demo
  identifier: harnessanbucidemo
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: gacerioni/harness-srm-demo
        build: <+input>
  stages:
    - stage:
        name: Java Build
        identifier: Java_Build
        type: CI
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: RunTests
                  name: Run and Build
                  identifier: Run_Tests
                  spec:
                    connectorRef: account.harnessImage
                    image: maven:3.8.6-openjdk-18
                    language: Java
                    buildTool: Maven
                    args: clean test
                    packages: com.gabsthecreator
                    runOnlySelectedTests: true
                    postCommand: |-
                      mvn package -DskipTests


                      export version=`mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout -Dmaven.repo.local=$PROJ_DIR/.m2/repository`
                      export release="$version"
                      export commitHash=<+codebase.commitSha>
                      export gitBranch=<+codebase.branch>

                      echo "printing current dir"
                      pwd
                      ls -ltra
                      echo "Who am I at runtime"
                      whoami

                      ls -ltra /tmp/engine
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
                    outputVariables:
                      - name: version
                      - name: release
                      - name: commitHash
                      - name: gitBranch
                  when:
                    stageStatus: Success
                  failureStrategies: []
              - step:
                  type: Run
                  name: Run
                  identifier: Run
                  spec:
                    connectorRef: account.harnessImage
                    image: maven:3.8.6-openjdk-18
                    shell: Bash
                    command: |-
                      export version=`mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout -Dmaven.repo.local=$PROJ_DIR/.m2/repository`
                      export release="$version"
                      export commitHash=<+codebase.commitSha>
                      export gitBranch=<+codebase.branch>

                      mvn clean test


                      mvn package -DskipTests

                      echo "printing current dir"
                      pwd
                      ls -ltra
                      echo "Who am I at runtime"
                      whoami
                      #echo "printing output path:"
                      #find / -name *.out

                      #ls -ltra /tmp/engine/*


                      #export release="<+codebase.branch>-$version-<+codebase.commitSha>"
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
                    outputVariables:
                      - name: version
                      - name: release
                      - name: commitHash
                      - name: gitBranch
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push an image to Docker Registry_1
                  identifier: BuildandPushanimagetoDockerRegistry_1
                  spec:
                    connectorRef: account.harnessImage
                    repo: <+pipeline.variables.DockerHub_User>/<+pipeline.variables.DockerHub_Repo>
                    tags:
                      - latest
                      - <+pipeline.variables.tag>
        when:
          pipelineStatus: Success
          condition: 1 == 1
    - stage:
        name: Integration Tests
        identifier: Integration_Tests
        type: CI
        spec:
          cloneCodebase: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Background
                  name: Start and expose the APP
                  identifier: myappservice
                  spec:
                    connectorRef: account.harnessImage
                    image: <+pipeline.variables.DockerHub_User>/<+pipeline.variables.DockerHub_Repo>:<+pipeline.variables.tag>
                    shell: Sh
                    portBindings:
                      "8080": "8080"
                    imagePullPolicy: IfNotPresent
              - step:
                  type: Run
                  name: Test from HOST
                  identifier: Test_from_HOST
                  spec:
                    shell: Bash
                    command: |-
                      sleep 10  
                      curl localhost:8080
              - step:
                  type: Run
                  name: Test from Container
                  identifier: Test_from_Container
                  spec:
                    connectorRef: account.harnessImage
                    image: yauritux/busybox-curl
                    shell: Sh
                    command: curl -i http://myappservice:8080
  variables:
    - name: DockerHub_User
      type: String
      description: ""
      value: <+input>
    - name: DockerHub_Repo
      type: String
      description: ""
      value: harness-anbu-demo
    - name: tag
      type: String
      description: ""
      value: 2.0.0
