pipeline:
  name: harness-anbu-ci-demo
  identifier: harnessanbucidemo
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: gacerioni/harness-srm-demo
        build: <+input>
  stages:
    - stage:
        name: Java Build
        identifier: Java_Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: RunTests
                  name: Run Tests
                  identifier: Run_Tests
                  spec:
                    connectorRef: account.harnessImage
                    image: maven:3.8.6-openjdk-18
                    language: Java
                    buildTool: Maven
                    args: clean test
                    packages: com.gabsthecreator
                    runOnlySelectedTests: true
                    preCommand: |
                      #ET-SETUP-BEGIN
                      PROJ_DIR=$PWD
                      cd /opt
                      arch=`uname -m`
                      if [ $arch = "x86_64" ]; then
                        if cat /etc/os-release | grep -iq alpine ; then
                          wget -qO- https://get.et.harness.io/releases/latest/alpine/harness-et-agent.tar.gz | tar -xz
                        else
                          wget -qO- https://get.et.harness.io/releases/latest/nix/harness-et-agent.tar.gz | tar -xz
                        fi
                      elif [ $arch = "aarch64" ]; then
                        wget -qO- https://get.et.harness.io/releases/latest/arm/harness-et-agent.tar.gz | tar -xz
                      fi
                      export ET_COLLECTOR_URL=https://app.harness.io/gratis/et-collector
                      export ET_APPLICATION_NAME=$HARNESS_PIPELINE_ID
                      export ET_ENV_ID=_INTERNAL_ET_CI
                      export ET_DEPLOYMENT_NAME=$HARNESS_BUILD_ID
                      export ET_ACCOUNT_ID=$HARNESS_ACCOUNT_ID
                      export ET_ORG_ID=$HARNESS_ORG_ID
                      export ET_PROJECT_ID=$HARNESS_PROJECT_ID
                      # export ET_SHUTDOWN_GRACETIME=30000
                      export JAVA_TOOL_OPTIONS="-agentpath:/opt/harness/lib/libETAgent.so"
                      # Uncomment the line below if using Java version 10 or above
                      # export JAVA_TOOL_OPTIONS="-Xshare:off -XX:-UseTypeSpeculation -XX:ReservedCodeCacheSize=512m -agentpath:/opt/harness/lib/libETAgent.so"
                      cd $PROJ_DIR
                      #ET-SETUP-END
                    postCommand: mvn package -DskipTests
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
